%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_PrefabParentObject: {fileID: 0}
  m_PrefabInternal: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: d9dfa825770c5486b9d95384bc7f7a1a, type: 3}
  m_Name: TodoList
  m_EditorClassIdentifier: 
  owners:
  - name: Normal
    color: {r: 0, g: 0, b: 0, a: 1}
    index: 0
  - name: Urgent
    color: {r: 1, g: 0, b: 0, a: 1}
    index: 1
  - name: Low Priority
    color: {r: 0.034482475, g: 0, b: 1, a: 1}
    index: 2
  - name: In Progress
    color: {r: 0.015686274, g: 1, b: 0.95926964, a: 1}
    index: 3
  - name: Note
    color: {r: 0, g: 0.5294118, b: 0.17890474, a: 1}
    index: 4
  items:
  - owner:
      name: Normal
      color: {r: 0, g: 0, b: 0, a: 1}
      index: 0
    task: Fix rounding error in raycasting for user input
    isComplete: 0
  - owner:
      name: Urgent
      color: {r: 1, g: 0, b: 0, a: 1}
      index: 1
    task: follow inventory tutorial
    isComplete: 0
  - owner:
      name: Normal
      color: {r: 0, g: 0, b: 0, a: 1}
      index: 0
    task: GUI made for level editing and choosing loadout
    isComplete: 0
  - owner:
      name: Low Priority
      color: {r: 0.034482475, g: 0, b: 1, a: 1}
      index: 2
    task: 'Inpathfinding grid, fix the rounding clamp on getting node from world position.
      Makes it so that the target is nnever actually selected '
    isComplete: 0
  - owner:
      name: Low Priority
      color: {r: 0.034482475, g: 0, b: 1, a: 1}
      index: 2
    task: Testing the weighting for the pathfinging along diagonals
    isComplete: 0
  - owner:
      name: Low Priority
      color: {r: 0.034482475, g: 0, b: 1, a: 1}
      index: 2
    task: StatusEffectMethod.cs --> ApplyConfusion, ApplyKnockback
    isComplete: 0
  - owner:
      name: Low Priority
      color: {r: 0.034482475, g: 0, b: 1, a: 1}
      index: 2
    task: HealthManager.cs --> Add limiters for health and shield to not exceed maximum
    isComplete: 1
  - owner:
      name: Low Priority
      color: {r: 0.034482475, g: 0, b: 1, a: 1}
      index: 2
    task: Weapon.cs --> fix to work with <Enemy> and <Player> indescriminately
    isComplete: 0
  - owner:
      name: Normal
      color: {r: 0, g: 0, b: 0, a: 1}
      index: 0
    task: GameMaster.cs --> Refactor according to new standards. Enum out as separate,
      and make coroutines
    isComplete: 0
  - owner:
      name: Urgent
      color: {r: 1, g: 0, b: 0, a: 1}
      index: 1
    task: RaidingUI.cs --> create, and map weapons to it that function (for play testing)
    isComplete: 0
  - owner:
      name: Urgent
      color: {r: 1, g: 0, b: 0, a: 1}
      index: 1
    task: Make sure Touch Controls work!
    isComplete: 0
  - owner:
      name: Urgent
      color: {r: 1, g: 0, b: 0, a: 1}
      index: 1
    task: Build test dungeon / set up base room prefabs
    isComplete: 0
  - owner:
      name: Urgent
      color: {r: 1, g: 0, b: 0, a: 1}
      index: 1
    task: create some way of showing line of sight for AI
    isComplete: 0
  - owner:
      name: Urgent
      color: {r: 1, g: 0, b: 0, a: 1}
      index: 1
    task: AI Shooting based off of weapon
    isComplete: 1
  - owner:
      name: Urgent
      color: {r: 1, g: 0, b: 0, a: 1}
      index: 1
    task: base Weapons created
    isComplete: 0
  - owner:
      name: Normal
      color: {r: 0, g: 0, b: 0, a: 1}
      index: 0
    task: Generalize the Proccedural floor tool, make a manage sub class that handels
      its own stuff, can be used to instantiate / reset managers fully then
    isComplete: 0
  - owner:
      name: Normal
      color: {r: 0, g: 0, b: 0, a: 1}
      index: 0
    task: Make Rifle
    isComplete: 0
  - owner:
      name: Normal
      color: {r: 0, g: 0, b: 0, a: 1}
      index: 0
    task: Make rocket launcher
    isComplete: 0
  - owner:
      name: Normal
      color: {r: 0, g: 0, b: 0, a: 1}
      index: 0
    task: make grenade
    isComplete: 0
  - owner:
      name: Normal
      color: {r: 0, g: 0, b: 0, a: 1}
      index: 0
    task: add to inventory
    isComplete: 0
  - owner:
      name: Normal
      color: {r: 0, g: 0, b: 0, a: 1}
      index: 0
    task: make used in gui
    isComplete: 0
  - owner:
      name: Normal
      color: {r: 0, g: 0, b: 0, a: 1}
      index: 0
    task: add cooldowns
    isComplete: 0
  - owner:
      name: Note
      color: {r: 0, g: 0.5294118, b: 0.17890474, a: 1}
      index: 4
    task: For snapping rooms together build locig that looks for the entrances look
      for each other and figure out thier opposite directions and how the have to
      move, auto snap on rotate as well.
    isComplete: 0
  - owner:
      name: Normal
      color: {r: 0, g: 0, b: 0, a: 1}
      index: 0
    task: Update collider logic based on offset and current room widht/depth values.
      Also Limit the offset to < roomSize. Update floor spawning as well as another
      script
    isComplete: 0
  - owner:
      name: Normal
      color: {r: 0, g: 0, b: 0, a: 1}
      index: 0
    task: fix energy barriers for doors
    isComplete: 0
  - owner:
      name: Urgent
      color: {r: 1, g: 0, b: 0, a: 1}
      index: 1
    task: fix characters ~after import
    isComplete: 0
